services:
  kafka:
    image: quay.io/strimzi/kafka:latest-kafka-3.4.0-amd64
    expose:
      - "9092"
    ports:
      - "9092:9092"
      - "29092:29092"
    command:
      [
        "sh",
        "-c",
        "export CLUSTER_ID=$$(bin/kafka-storage.sh random-uuid) && bin/kafka-storage.sh format --ignore-formatted -t $$CLUSTER_ID -c config/kraft/server.properties && bin/kafka-server-start.sh config/kraft/server.properties --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS}",
      ]
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_ADVERTISED_HOST_NAME}:29092,PLAINTEXT_HOST://:9092

  kafka-web:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9093:8080"
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

  jaeger:
    image: jaegertracing/all-in-one:latest
    expose:
      - "14250"
      - "14268"
    ports:
      - "16686:16686"  #ui

  otel-collector:
    image: otel/opentelemetry-collector:0.53.0
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    expose:
      - "4317" #OTLP gRPC receiver
    ports:
      - "4317:4317" #allow send metrics from local dev
    depends_on:
      - jaeger

  random-service:
    #    profiles:
    #      - noop
    build:
      context: .
    ports:
      - "${RANDOM_SERVICE_PORT}:${RANDOM_SERVICE_PORT}"
    environment:
      KAFKA: kafka:9092
      OTEL_COLLECTOR: http://otel-collector:4317
      TRACING_RATIO: 1.0
      APPLICATION_PROFILE: ${APPLICATION_PROFILE}
    command: [ "sh","-c", "java -jar ./random-service/build/libs/app.jar" ]

  user-service:
    #    profiles:
    #      - noop
    build:
      context: .
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    environment:
      KAFKA: kafka:9092
      OTEL_COLLECTOR: http://otel-collector:4317
      TRACING_RATIO: 1.0
      RANDOM_SERVICE_URL: http://random-service:${RANDOM_SERVICE_PORT}
      APPLICATION_PROFILE: ${APPLICATION_PROFILE}
    command: [ "sh","-c", "java -jar ./user-service/build/libs/app.jar" ]




networks:
  default:
    name: otel-example-net
