springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-api.html
    disable-swagger-default-url: true

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"


management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health,prometheus
  endpoint:
    health:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  tracing:
    sampling:
      probability: ${TRACING_RATIO:1.0}
#    propagation:
#      type: b3

spring:
  application:
    name: random-service
  main:
    banner-mode: off
  profiles:
    active:
      - ${APPLICATION_PROFILE:dev}

  kafka:
    bootstrap-servers: ${KAFKA:localhost:29092}
    properties:
      ssl:
        truststore:
          location:
          password:
      sasl:
        mechanism: GSSAPI
        jaas:
          config:
      security:
        protocol: PLAINTEXT

  cloud:
    function:
      definition: onUserEvent;
    stream:
      defaultBinder: kafka
      kafka:
        binder:
          replicationFactor: 1
          autoCreateTopics: true
          requiredAcks: all
          producerProperties:
            retries: 3
            key:
              serializer: org.apache.kafka.common.serialization.StringSerializer
          enable-observation: true
        bindings:
          onUserEvent-in-0:
            consumer:
              enable-dlq: true
              dlq-name: user-topic-dlq
      bindings:
        onUserEvent-in-0:
          destination: user-topic
          group: tracing-group
          binder: kafka
          consumer:
            max-attempts: 3


server:
  port: ${RANDOM_SERVICE_PORT:7070}