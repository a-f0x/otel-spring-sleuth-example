springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-api.html
    disable-swagger-default-url: true

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

otel:
  exporter:
    otlp:
      traces:
        endpoint: ${OTEL_COLLECTOR:http://localhost:4317}

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health,prometheus
  endpoint:
    health:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  tracing:
    sampling:
      probability: ${TRACING_RATIO:1.0}




spring:
  profiles:
    active:
      - ${APPLICATION_PROFILE:dev}
  application:
    name: user-service
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:h2:mem:mydb
    username: sa
    password: password
    driverClassName: org.h2.Driver

  main:
    banner-mode: off

  kafka:
    bootstrap-servers: ${KAFKA:localhost:29092}
    properties:
      ssl:
        truststore:
          location:
          password:
      sasl:
        mechanism: GSSAPI
        jaas:
          config:
      security:
        protocol: PLAINTEXT

  cloud:
    stream:
      defaultBinder: kafka
      kafka:
        binder:
          replicationFactor: 1
          autoCreateTopics: true
          requiredAcks: all
          producerProperties:
            retries: 3
            key:
              serializer: org.apache.kafka.common.serialization.StringSerializer
          enable-observation: true
      bindings:
        userNotification:
          destination: user-topic
          binder: kafka

    openfeign:
      client:
        config:
          random-service-client:
            connectTimeout: 5000
            readTimeout: 5000
            loggerLevel: basic



random-service:
  url: ${RANDOM_SERVICE_URL:http://localhost:7070}

server:
  port: ${USER_SERVICE_PORT:7071}